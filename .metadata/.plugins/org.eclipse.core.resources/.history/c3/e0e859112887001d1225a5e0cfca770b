package com.saeyan.controller;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;


@WebServlet({ "/UploadServlet", "/upload.do" })
public class UploadServlet extends HttpServlet {
	
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public UploadServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(request,response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html; charset=utf-8");
		
		PrintWriter out = response.getWriter();	// 서버가 클라이언트에 응답하기 위한 객체
		
		String savePath = "upload";	// 다운받는 경로
		int uploadFileSizeLimit = 5*1024*1024;	// 최대 업로드 파일 크기 5MB로 제한한다. 1024byte = 1kb , 2번곱하면 1mb	
		String encType = "utf-8";	// 인코딩 방식 지정
		
		ServletContext context = getServletContext();
		String uploadFilePath = context.getRealPath(savePath);	// 서버의 실제 경로  ( 업로드 되는 파일의 경로 )
		System.out.println(uploadFilePath);
		
		try {
			MultipartRequest multi = new MultipartRequest(request, uploadFilePath, uploadFileSizeLimit, encType,new DefaultFileRenamePolicy());
			// request객체, 서버상의 실제 디렉토리, 최대 파일 크기, 인코딩 방법, 동일한 이름이 존재하면 새로운 이름을 부여함.
			
			String fileName = multi.getFilesystemName("uploadFile");	// 서버에 실제 업로드된 파일의 이름을 얻기
			
			if(fileName == null) {
				System.out.println("파일이 업로드 되지 않음.");
			}else {
				out.println("<br>글쓴이: " + multi.getParameter("name"));	// 파일 업로드 처리를 위해서는 cos.jar 라이브러리에 있는 MultipartRequest의 getParameter메소드를 사용해야 한다.
				out.println("<br> 제 &nbsp; 목: " +multi.getParameter("title"));
			}
		}catch(Exception e) {
			System.out.println("예외 발생 : " + e);
		}// catch
	}

}
